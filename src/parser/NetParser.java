/**
 * 
 */
package parser;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Locale;
import java.util.Scanner;

/**
 * Reads a .net file generated by JavaNNS with 1 input layer, 1 hidden layer and 1 output layer.
 * @author Daniel
 *
 */
public class NetParser {
	private String path;
	private int inputNeurons;
	private int hiddenNeurons;
	private int outputNeurons;
	private ArrayList <Double> inputNeuronsBiases;
	private ArrayList <Double> hiddenNeuronsBiases;
	private ArrayList <Double> outputNeuronsBiases;
	private Scanner s;
	private Scanner lineScanner;
	
	
	public NetParser (String path, int inputNeurons, int hiddenNeurons, int outputNeurons){
		this.path = path;
		this.inputNeurons = inputNeurons;
		this.hiddenNeurons = hiddenNeurons;
		this.outputNeurons = outputNeurons;
		inputNeuronsBiases = new ArrayList <Double> (inputNeurons);
		hiddenNeuronsBiases = new ArrayList <Double> (hiddenNeurons);
		outputNeuronsBiases = new ArrayList <Double> (outputNeurons);
		
	}
	
	public void parse (){
		//Open file
		InputStream is = this.getClass().getResourceAsStream(path);
		s = new Scanner (is);
		
		//Biases start in line 28.
		for (int i = 0; i < 27; i++)
			s.nextLine();
		
		//Parse input layer biases
		for (int i = 0; i < inputNeurons; i++){			
			inputNeuronsBiases.add(getBiasInLine(s.nextLine()));
			System.out.println(inputNeuronsBiases.get(i));
		}		
		
		//Parse hidden layer biases
		for (int i = 0; i < hiddenNeurons; i++){
			hiddenNeuronsBiases.add(getBiasInLine(s.nextLine()));
			System.out.println(hiddenNeuronsBiases.get(i));
		}
		
		//Parse output layer biases

		for (int i = 0; i < outputNeurons; i++){
			outputNeuronsBiases.add(getBiasInLine(s.nextLine()));
			System.out.println(outputNeuronsBiases.get(i));
		}
		
		//Skip 7 lines
		for (int i = 0; i < 7; i++)
			s.nextLine();
		
		System.out.println(s.nextLine());
	}
	
	private double getBiasInLine (String line){

		//Remove all unnecessary characters.
		line = line.replaceAll("\\|", "");
		
		//Replace commas
		line = line.replaceAll(",", ".");
		
		//Parse the line		
		lineScanner = new Scanner (line);
		lineScanner.useLocale(Locale.US);
		
		//Skip to 4rd token
		for (int j = 0; j < 3; j++)
			lineScanner.next();
		
		//Use 4rd token as a bias
		return lineScanner.nextDouble();
		
	}
}
